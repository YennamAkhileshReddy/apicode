stages:
  - stage: Build
    jobs:
      - job: Build
        pool: ubuntu-latest
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'restore'
              projects: 'sdlcdotnetcoreapps/sdlc-log-api01/sdlc-log-api01.csproj'
              feedsToUse: 'select'
          - task: DotNetCoreCLI@2
            inputs:
              command: 'build'
              projects: 'sdlcdotnetcoreapps/sdlc-log-api01/sdlc-log-api01.csproj'
          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: 'sdlcdotnetcoreapps/sdlc-log-api01/sdlc-log-api01.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
  - stage: DeployDevStage
    displayName: Deploy Dev
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: DeployDev
      displayName: Deploy Dev
      environment: dev
      pool: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'WMSDLC Connection'
                  appType: 'webAppLinux'
                  WebAppName: 'sampleapp01'
                  packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                  RuntimeStack: 'DOTNETCORE|1.0'
  - stage: DeployQAStage
    displayName: Deploy to QA
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: DeployDev
      displayName: Deploy Dev
      environment: dev
      pool: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'WMSDLC Connection'
                  appType: 'webAppLinux'
                  WebAppName: 'sampleapp01'
                  packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                  RuntimeStack: 'DOTNETCORE|1.0'
  - stage: SwapQABluewithGreen
    displayName: Deploy Dev
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: DeployDev
      displayName: Deploy Dev
      environment: dev
      pool: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'WMSDLC Connection'
                  appType: 'webAppLinux'
                  WebAppName: 'sampleapp01'
                  packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                  RuntimeStack: 'DOTNETCORE|1.0'
  - stage: DeployPreProdStage
    displayName: Deploy Dev
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: DeployDev
      displayName: Deploy Dev
      environment: dev
      pool: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'WMSDLC Connection'
                  appType: 'webAppLinux'
                  WebAppName: 'sampleapp01'
                  packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                  RuntimeStack: 'DOTNETCORE|1.0'
  - stage: SwapPreProdwithProd
    displayName: Deploy Dev
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: DeployDev
      displayName: Deploy Dev
      environment: dev
      pool: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'WMSDLC Connection'
                  appType: 'webAppLinux'
                  WebAppName: 'sampleapp01'
                  packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                  RuntimeStack: 'DOTNETCORE|1.0'
           
